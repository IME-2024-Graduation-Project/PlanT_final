# Generated by Django 4.1 on 2024-05-18 06:06

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        ("PlanT_Backend", "0003_rename_trip_posstime_trip_trip_walkposstime_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254, primary_key=True, serialize=False
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to.",
                        related_name="custom_user_set",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="custom_user_set",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.RemoveField(
            model_name="place",
            name="place_address",
        ),
        migrations.RemoveField(
            model_name="place",
            name="place_city",
        ),
        migrations.RemoveField(
            model_name="place",
            name="place_eco",
        ),
        migrations.RemoveField(
            model_name="plan",
            name="plan_city",
        ),
        migrations.RemoveField(
            model_name="route",
            name="route_co2",
        ),
        migrations.RemoveField(
            model_name="route",
            name="route_detail",
        ),
        migrations.RemoveField(
            model_name="route",
            name="route_time",
        ),
        migrations.RemoveField(
            model_name="route",
            name="route_transport",
        ),
        migrations.RemoveField(
            model_name="route",
            name="route_type",
        ),
        migrations.RemoveField(
            model_name="tag",
            name="tag_co2",
        ),
        migrations.RemoveField(
            model_name="tag",
            name="tag_time",
        ),
        migrations.RemoveField(
            model_name="trip",
            name="trip_cycleposstime",
        ),
        migrations.RemoveField(
            model_name="trip",
            name="trip_ecolevel",
        ),
        migrations.RemoveField(
            model_name="trip",
            name="trip_walkposstime",
        ),
        migrations.AddField(
            model_name="place",
            name="place_detail",
            field=models.JSONField(default=None),
        ),
        migrations.AddField(
            model_name="place",
            name="place_time",
            field=models.PositiveSmallIntegerField(default=1),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="place",
            name="place_type",
            field=models.PositiveSmallIntegerField(
                choices=[(1, "식사"), (2, "카페"), (3, "숙박"), (4, "관광")], default=4
            ),
            preserve_default=False,
        ),
        migrations.DeleteModel(
            name="City",
        ),
        migrations.AlterField(
            model_name="trip",
            name="trip_user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="PlanT_Backend.user"
            ),
        ),
        migrations.DeleteModel(
            name="Users",
        ),
    ]
